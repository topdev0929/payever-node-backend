{{ $chartName := .Chart.Name }}
{{ $values := .Values }}
{{ $appName := printf "%s-job" $chartName }}

apiVersion: batch/v1
kind: Job

metadata:
  name: {{ $appName}}
  namespace: {{ $values.namespace }}

  labels:
    app: {{ $appName }}
    tier: nodejs
    type: job

  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "1"

spec:
  backoffLimit: 1

  template:
    metadata:
      labels:
        app: {{ $appName }}
        tier: nodejs
        type: job

    spec:
      priorityClassName: {{ $values.priorityClass }}
      restartPolicy: Never

      imagePullSecrets:
        - name: {{ $values.image.pullSecretName }}

      containers:
        - name: node
          image: {{ $values.image.nodejs }}
          imagePullPolicy: IfNotPresent
          command: [ "/bin/bash", "-c", "/payever/deploy/job.sh" ]

          resources:
{{ if eq .Values.deploy.env "test" }}
{{ toYaml $values.test.resources | indent 12 }}
{{ else if eq .Values.deploy.env "stage" }}
{{ toYaml $values.stage.resources | indent 12 }}
{{ else }}
{{ toYaml $values.live.resources | indent 12 }}
{{ end }}

          envFrom:
            - configMapRef:
                name: {{ $chartName }}
            - configMapRef:
                name: micro-url-map
            - secretRef:
                name: {{ $chartName }}

          env:
            - name: KUBERNETES_DEPLOYED
              value: "{{ now }}"
