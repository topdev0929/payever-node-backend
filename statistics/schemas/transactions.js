cube('transactions', {
  dimensions: {
    channel: {
      sql: `${CUBE}.channel`,
      type: 'string',
    },
    country: {
      sql: `${CUBE}.\`billingAddress.country\``,
      type: 'string',
    },
    currency: {
      sql: `${CUBE}.currency`,
      type: 'string',
    },
    paymentMethod: {
      sql: `${CUBE}.paymentMethod`,
      type: 'string',
    },
    /* ///////////////////////
    There is no data for customer in Production. 
    For this reason, until the data is fixed, these metrics are commented.
    Do not delete them. 
    
    //////////////////////////*/
    // customerEmail: {
    //   sql: `${CUBE}.customerEmail`,
    //   type: `string`
    // },
    // customerName: {
    //   sql: `${CUBE}.customerName`,
    //   type: `string`
    // },
    businessId: {
      sql: `${CUBE}.businessId`,
      type: `string`
    },
    businessName: {
      sql: `${CUBE}.businessName`,
      type: `string`
    },
    createdAt: {
      sql: `${CUBE}.createdAt`,
      type: `string`
    },
    status: {
      sql: `${CUBE}.status`,
      type: 'string',
    },
  },
  measures: {
    averageSuccessPayments: {
      filters: [{ sql: `${CUBE}.status in ('STATUS_ACCEPTED', 'STATUS_PAID')` }],
      sql: 'amount',
      type: 'avg',
    },
    countNewPayments: {
      filters: [{ sql: `${CUBE}.status = 'STATUS_NEW'` }],
      sql: `_id`,
      type: 'count',
    },
    countPaidPayments: {
      filters: [{ sql: `${CUBE}.status = 'STATUS_PAID'` }],
      sql: `_id`,
      type: 'count',
    },
    countRefunds: {
      filters: [{ sql: `${CUBE}.status = 'STATUS_REFUNDED'` }],
      sql: '_id',
      type: 'count',
    },
    countSuccessPayments: {
      filters: [{ sql: `${CUBE}.status in ('STATUS_ACCEPTED', 'STATUS_PAID')` }],
      sql: `_id`,
      type: 'count',
    },
    countUnsuccessfulPayments: {
      filters: [{ sql: `${CUBE}.status in ('STATUS_NEW', 'STATUS_IN_PROCESS', 'STATUS_DECLINED', 'STATUS_REFUNDED', 'STATUS_FAILED', 'STATUS_CANCELLED')` }],
      sql: `_id`,
      type: 'count',
    },
    maxSuccessPayments: {
      filters: [{ sql: `${CUBE}.status in ('STATUS_ACCEPTED', 'STATUS_PAID')` }],
      sql: 'amount',
      type: 'max',
    },
    minSuccessPayments: {
      filters: [{ sql: `${CUBE}.status in ('STATUS_ACCEPTED', 'STATUS_PAID')` }],
      sql: 'amount',
      type: 'min',
    },
    rateNewPayments: {
      format: 'percent',
      sql: `TRUNCATE(${countNewPayments} / ${totalCount} * 100, 2)`,
      type: 'number',
    },
    ratePaidPayments: {
      format: 'percent',
      sql: `TRUNCATE(${countPaidPayments} / ${totalCount} * 100, 2)`,
      type: 'number',
    },
    rateRefundPayments: {
      format: 'percent',
      sql: `TRUNCATE(${countRefunds} / ${totalCount} * 100, 2)`,
      type: 'number',
    },
    rateSuccessPayments: {
      format: 'percent',
      sql: `TRUNCATE(${countSuccessPayments} / ${totalCount} * 100, 2)`,
      type: 'number',
    },
    revenue: {
      filters: [{ sql: `${CUBE}.status in ('STATUS_ACCEPTED', 'STATUS_PAID')` }],
      sql: 'amount',
      type: 'sum',
    },
    revenueAll: {
      sql: 'amount',
      type: 'sum',
    },
    revenueSuccessAvg: {
      filters: [{ sql: `${CUBE}.status in ('STATUS_ACCEPTED', 'STATUS_PAID')` }],
      sql: 'amount',
      type: 'avg',
    },
    revenueAllAvg: {
      sql: 'amount',
      type: 'avg',
    },
    // countCustomers: {
    //   sql: 'customerEmail',
    //   type: 'countDistinct',
    //   filters: [
    //     { sql: `${CUBE}.customerEmail IS NOT NULL` },
    //   ],
    // },
    totalCount: {
      sql: '_id',
      type: 'count',
    },
  },
  sql: 'SELECT *, null as paymentFlowId FROM payments',
  preAggregations: {
    /*  */
    // totalCustomerBusinessH: {
    //   type: 'rollup',
    //   measureReferences: [
    //     countCustomers,
    //   ],
    //   dimensionReferences: [
    //     businessId,
    //   ],
    //   timeDimensionReference: createdAt,
    //   granularity: `hour`,
    //   external: true,
    //   scheduledRefresh: true,
    //   refreshKey: {
    //     sql: 'SELECT MAX(createdAt) FROM payments',
    //   },
    //   useOriginalSqlPreAggregations: true,
    // },
    
    // totalCustomerBusinessD: {
    //   type: 'rollup',
    //   measureReferences: [
    //     countCustomers,
    //   ],
    //   dimensionReferences: [
    //     businessId,
    //   ],
    //   timeDimensionReference: createdAt,
    //   granularity: `day`,
    //   external: true,
    //   scheduledRefresh: true,
    //   refreshKey: {
    //     sql: 'SELECT MAX(createdAt) FROM payments',
    //   },
    //   useOriginalSqlPreAggregations: true,
    // },
    // totalCustomerBusinessM: {
    //   type: 'rollup',
    //   measureReferences: [
    //     countCustomers,
    //   ],
    //   dimensionReferences: [
    //     businessId,
    //   ],
    //   timeDimensionReference: createdAt,
    //   granularity: `month`,
    //   external: true,
    //   scheduledRefresh: true,
    //   refreshKey: {
    //     sql: 'SELECT MAX(createdAt) FROM payments',
    //   },
    //   useOriginalSqlPreAggregations: true,
    // },
    // totalCustomerBusinessY: {
    //   type: 'rollup',
    //   measureReferences: [
    //     countCustomers,
    //   ],
    //   dimensionReferences: [
    //     businessId,
    //   ],
    //   timeDimensionReference: createdAt,
    //   granularity: `year`,
    //   external: true,
    //   scheduledRefresh: true,
    //   refreshKey: {
    //     sql: 'SELECT MAX(createdAt) FROM payments',
    //   },
    //   useOriginalSqlPreAggregations: true,
    // },
    averagePayChannel: {
      type: `rollup`,
      measureReferences: [averageSuccessPayments],
      dimensionReferences: [channel],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    payMethodByBus: {
      type: `rollup`,
      dimensionReferences: [paymentMethod, businessId],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    channelByBus: {
      type: `rollup`,
      dimensionReferences: [channel, businessId],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    averagePayChanlH: {
      type: `rollup`,
      measureReferences: [averageSuccessPayments],
      dimensionReferences: [channel],
      timeDimensionReference: createdAt,
      granularity: `hour`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    payMethodByBusH: {
      type: `rollup`,
      dimensionReferences: [paymentMethod, businessId],
      timeDimensionReference: createdAt,
      granularity: `hour`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    channelByBusH: {
      type: `rollup`,
      dimensionReferences: [channel, businessId],
      timeDimensionReference: createdAt,
      granularity: `hour`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    averagePayChanlY: {
      type: `rollup`,
      measureReferences: [averageSuccessPayments],
      dimensionReferences: [channel],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    payMethodByBusY: {
      type: `rollup`,
      dimensionReferences: [paymentMethod, businessId],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    channelByBusY: {
      type: `rollup`,
      dimensionReferences: [channel, businessId],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    tCountByBusD: {
      type: `rollup`,
      measureReferences: [totalCount],
      dimensionReferences: [paymentMethod, channel, businessId, currency],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    tCountByBusH: {
      type: `rollup`,
      measureReferences: [totalCount],
      dimensionReferences: [paymentMethod, channel, businessId, currency],
      timeDimensionReference: createdAt,
      granularity: `hour`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    tCountByBusY: {
      type: `rollup`,
      measureReferences: [totalCount],
      dimensionReferences: [paymentMethod, channel, businessId, currency],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    convRateByBusD: {
      type: `rollup`,
      measureReferences: [countSuccessPayments, totalCount, countUnsuccessfulPayments],
      dimensionReferences: [paymentMethod, businessId, currency],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    convRateByBusH: {
      type: `rollup`,
      measureReferences: [countSuccessPayments, totalCount, countUnsuccessfulPayments],
      dimensionReferences: [paymentMethod, businessId, currency],
      timeDimensionReference: createdAt,
      granularity: `hour`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    convRateByBusY: {
      type: `rollup`,
      measureReferences: [countSuccessPayments, totalCount, countUnsuccessfulPayments],
      dimensionReferences: [paymentMethod, businessId, currency],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    revAllByBusD: {
      type: `rollup`,
      measureReferences: [revenueAll, revenue, revenueAllAvg, revenueSuccessAvg],
      dimensionReferences: [paymentMethod, businessId, currency, channel],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    revAllByBusH: {
      type: `rollup`,
      measureReferences: [revenueAll, revenue, , revenueAllAvg, revenueSuccessAvg],
      dimensionReferences: [paymentMethod, businessId, currency, channel],
      timeDimensionReference: createdAt,
      granularity: `hour`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    revAllByBusY: {
      type: `rollup`,
      measureReferences: [revenueAll, revenue, revenueAllAvg, revenueSuccessAvg],
      dimensionReferences: [paymentMethod, businessId, currency, channel],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    exitRevCurBusD: {
      type: `rollup`,
      measureReferences: [revenue, countNewPayments, countSuccessPayments, countPaidPayments, totalCount, ratePaidPayments],
      dimensionReferences: [currency, businessId],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    exitRevCurBusH: {
      type: `rollup`,
      measureReferences: [revenue, countNewPayments, countSuccessPayments, countPaidPayments, totalCount, ratePaidPayments],
      dimensionReferences: [currency, businessId],
      timeDimensionReference: createdAt,
      granularity: `hour`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    exitRevCurBusY: {
      type: `rollup`,
      measureReferences: [revenue, countNewPayments, countSuccessPayments, countPaidPayments, totalCount, ratePaidPayments],
      dimensionReferences: [currency, businessId],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    exitConvCurBusH: {
      type: `rollup`,
      measureReferences: [countSuccessPayments, countNewPayments, totalCount],
      dimensionReferences: [currency, businessId],
      timeDimensionReference: createdAt,
      granularity: `hour`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    exitConvCurBusD: {
      type: `rollup`,
      measureReferences: [countSuccessPayments, countNewPayments, totalCount],
      dimensionReferences: [currency, businessId],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    exitConvCurBusY: {
      type: `rollup`,
      measureReferences: [countSuccessPayments, countNewPayments, totalCount],
      dimensionReferences: [currency, businessId],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    countNewPayBY: {
      type: `rollup`,
      measureReferences: [countNewPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    countNewPayBM: {
      type: `rollup`,
      measureReferences: [countNewPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `month`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    countNewPayBD: {
      type: `rollup`,
      measureReferences: [countNewPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    countPaidPayBY: {
      type: `rollup`,
      measureReferences: [countPaidPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    countPaidPayBM: {
      type: `rollup`,
      measureReferences: [countPaidPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `month`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    countPaidPayBD: {
      type: `rollup`,
      measureReferences: [countPaidPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    countSucPayBY: {
      type: `rollup`,
      measureReferences: [countSuccessPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    countSucPayBM: {
      type: `rollup`,
      measureReferences: [countSuccessPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `month`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    countSucPayBD: {
      type: `rollup`,
      measureReferences: [countSuccessPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    averageSucPayBY: {
      type: `rollup`,
      measureReferences: [averageSuccessPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    averageSucPayBM: {
      type: `rollup`,
      measureReferences: [averageSuccessPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `month`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    averageSucPayBD: {
      type: `rollup`,
      measureReferences: [averageSuccessPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    rateSucPayMethBY: {
      type: `rollup`,
      measureReferences: [rateSuccessPayments],
      dimensionReferences: [paymentMethod, businessId],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    rateSucPayMethBM: {
      type: `rollup`,
      measureReferences: [rateSuccessPayments],
      dimensionReferences: [paymentMethod, businessId],
      timeDimensionReference: createdAt,
      granularity: `month`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    rateSucPayMethBD: {
      type: `rollup`,
      measureReferences: [rateSuccessPayments],
      dimensionReferences: [paymentMethod, businessId],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    rateNewPayBY: {
      type: `rollup`,
      measureReferences: [rateNewPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `year`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    rateNewPayBM: {
      type: `rollup`,
      measureReferences: [rateNewPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `month`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
    rateNewPayBD: {
      type: `rollup`,
      measureReferences: [rateNewPayments],
      dimensionReferences: [businessId],
      timeDimensionReference: createdAt,
      granularity: `day`,
      external: true,
      scheduledRefresh: true,
      refreshKey: {
        sql: 'SELECT MAX(createdAt) FROM payments',
      },
      useOriginalSqlPreAggregations: true,
    },
  },
});
